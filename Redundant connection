def findRedundantConnection(edges):
    parent = [i for i in range(len(edges) + 1)]

    def find(x):
        while x != parent[x]:
            parent[x] = parent[parent[x]]
            x = parent[x]
        return x

    def union(x, y):
        rootX = find(x)
        rootY = find(y)
        if rootX == rootY:
            return False
        parent[rootX] = rootY
        return True

    for u, v in edges:
        if not union(u, v):
            return [u, v]

    return []


print('Example1',findRedundantConnection([[1,2],[1,3],[2,3]]))        
print('Example2',findRedundantConnection([[1,2],[2,3],[3,4],[1,4],[1,5]]))  
