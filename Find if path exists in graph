def validPath(n, edges, source, destination):
    graph = [[] for _ in range(n)]
    for u, v in edges:
        graph[u].append(v)
        graph[v].append(u)

    visited = [False] * n

    def dfs(node):
        if node == destination:
            return True
        visited[node] = True
        for neighbor in graph[node]:
            if not visited[neighbor]:
                if dfs(neighbor):
                    return True
        return False

    return dfs(source)

print(validPath(3, [[0,1],[1,2],[2,0]], 0, 2))  
print(validPath(6, [[0,1],[0,2],[3,5],[5,4],[4,3]], 0, 5))  
