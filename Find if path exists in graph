def validPath(n, edges, source, destination):
    graph = []
    for i in range(n):
        graph.append([])

    for edge in edges:
        u = edge[0]
        v = edge[1]
        graph[u].append(v)
        graph[v].append(u)

    visited = []
    for i in range(n):
        visited.append(False)

    def dfs(node):
        if node == destination:
            return True
        visited[node] = True
        for neighbor in graph[node]:
            if visited[neighbor] == False:
                if dfs(neighbor) == True:
                    return True
        return False

    return dfs(source)

print(validPath(3, [[0, 1], [1, 2], [2, 0]], 0, 2))
print(validPath(6, [[0, 1], [0, 2], [3, 5], [5, 4], [4, 3]], 0, 5))

